---
- name: Set binary folder
  set_fact:
    bamboo_master_binary_folder: "{{ bamboo_master_application_folder }}/atlassian-bamboo-{{ bamboo_master.version }}"

- name: "Install JDK"
  yum:
    name: "java-{{ openjdk_version }}-openjdk"
    state: installed

- name: Add local user
  user:
    name: "{{ bamboo_master_user }}"

- name: Create app and data folders
  file:
    name: "{{ item }}"
    state: directory
    owner: "{{ bamboo_master_user }}"
    group: "{{ bamboo_master_user }}"
  with_items:
    - "{{ bamboo_master_application_folder }}"
    - "{{ bamboo_master_data_folder }}"

- name: Check for downgrade
  fail: msg="Downgrades are not supported. Please set bamboo_version to higher or equal to {{ ansible_local.bamboo.version }}. Current value is {{ bamboo_master.version }}"
  when:
    - ansible_local is defined
    - ansible_local.bamboo is defined
    - ansible_local.bamboo.version is defined
    - bamboo_master.version | version_compare(ansible_local.bamboo.version, '<')

- name: Stop when upgrade
  systemd:
    name: bamboo
    state: stopped
  when:
    - ansible_local is defined
    - ansible_local.bamboo is defined
    - ansible_local.bamboo.version is defined
    - bamboo_master.version | version_compare(ansible_local.bamboo.version, '>')
  notify: restart bamboo

- name: Download and unpack bamboo
  unarchive:
    src: "https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-{{ bamboo_master.version }}.tar.gz"
    dest: "{{ bamboo_master_application_folder }}"
    remote_src: True
    # keep our modified, newer files instead of overriding from the tarball
    keep_newer: yes
    owner: "{{ bamboo_master_user }}"
    group: "{{ bamboo_master_user }}"
  changed_when: False

- name: Configure bamboo server (server.xml)
  template:
    src: server.xml.j2
    dest: "{{ bamboo_master_binary_folder }}/conf/server.xml"
  notify: restart bamboo

- name: Add cronjob for cleanup Bamboo logs
  cron:
    name: cleanupbamboologs
    special_time: daily
    state: present
    job: "/usr/bin/find {{ bamboo_master_binary_folder }}/logs/ -name *.log -type f -mtime +7 -exec rm  {} \\;"

- name: Add cronjob for cleanup Bamboo build-dir
  cron:
    name: cleanupbamboobuilddir
    hour: 03
    minute: 15
    weekday: 0 # sunday
    state: present
    job: "/usr/bin/find {{ bamboo_master_data_folder }}/xml-data/build-dir/ -maxdepth 1 -type d -mtime +1 -exec rm -rf {} \\;"

- name: Add cronjob for cleanup maven repository cache
  cron:
    name: cleanupbamboomavenrepo
    hour: 03
    minute: 15
    weekday: 0 # sunday
    state: present
    job: "/usr/bin/find {{ bamboo_master_data_folder }}/.m2/repository/ -maxdepth 1 -type d -mtime +1 -exec rm -rf {} \\;"

- name: Install bamboo systemd unit script
  template:
    src: bamboo.service.j2
    dest: /etc/systemd/system/bamboo.service
    mode: 0744
  notify: restart bamboo

- name: Set bamboo.home property variable
  template:
    src: bamboo-init.properties
    dest: "{{ bamboo_master_binary_folder }}/atlassian-bamboo/WEB-INF/classes/bamboo-init.properties"
    owner: "{{ bamboo_master_user }}"
    group: "{{ bamboo_master_user }}"
  notify: restart bamboo

- name: Set JVM settings
  replace:
    dest: "{{ bamboo_master_binary_folder }}/bin/setenv.sh"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - regexp: 'JVM_MINIMUM_MEMORY="[0-9]+[bkmg]'
      replace: 'JVM_MINIMUM_MEMORY="{{ bamboo_master_jvm_memory }}'
    - regexp: 'JVM_MAXIMUM_MEMORY="[0-9]+[bkmg]'
      replace: 'JVM_MAXIMUM_MEMORY="{{ bamboo_master_jvm_memory }}'
  notify: restart bamboo

- name: Ensure service is running
  systemd:
    name: bamboo
    state: started

- name: Ensure ansible facts folder exists
  file:
    name: /etc/ansible/facts.d/
    state: directory
    recurse: yes

- name: Ensure bamboo facts exists
  file:
    name: /etc/ansible/facts.d/bamboo.fact
    state: touch
  changed_when: False

- name: Update bamboo facts
  template:
    src: bamboo.fact.j2
    dest: /etc/ansible/facts.d/bamboo.fact
  notify: restart bamboo
